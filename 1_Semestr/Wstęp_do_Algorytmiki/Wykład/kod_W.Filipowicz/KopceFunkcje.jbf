<?xml version="1.0" encoding="UTF-8"?><JavaBlocks author="wlfil" scriptEngine="JavaScript" version="6010">
  <option fullConnectorValues="true" grid="false" pascal="false"/>
  <flowchart name="Start4">
    <canvas interval="200" posX="0.0" posY="0.0" zoom="4"/>
    <blocks>
      <block id="1" name="Start" type="START">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="320.0" posY="-410.0"/>
        <comment>Start4</comment>
        <connect ID="5"/>
      </block>
      <block id="2" type="RETURN">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="-430.0" posY="140.0"/>
        <comment>End</comment>
      </block>
      <block id="3" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="320.0" posY="-40.0"/>
        <content>function czyJestKopcem() {&#13;;	dlugosc=abc.length;&#13;;	jestKopcem = true;&#13;;	for(k=1; k&lt;abc.length;k++) {&#13;;	if(2*k&gt;=dlugosc) return true;&#13;;	jestKopcem=abc[k]&gt;=abc[2*k];&#13;;	if(2*k+1&gt;=dlugosc) return jestKopcem;&#13;;	jestKopcem=jestKopcem &amp;&amp; abc[k]&gt;=abc[2*k+1];&#13;;	if (!jestKopcem) return false;&#13;;	}}&#13;;	</content>
        <connect ID="4"/>
      </block>
      <block id="4" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="320.0" posY="140.0"/>
        <content>abc=[0,23,19,18,8,9,5,6];	wynik=czyJestKopcem();	if (wynik) Writeln("Jest Kopcem");	else Writeln("Nie jest kopcem");	abc=[0,9,99,80,72,34,21,18]</content>
        <connect ID="7"/>
      </block>
      <block id="5" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="320.0" posY="-260.0"/>
        <content>function zanurzanie(k);	{ N=abc.length-1;;	while(2*k&lt;=N) {;	j = 2*k;;	if(j&lt;N &amp;&amp; abc[j]&lt;abc[j+1]) j++;;	if(!(abc[k]&lt;abc[j])) break;;	pom=abc[k];;	abc[k]=abc[j];;	abc[j]=pom;;	k=j;}};	</content>
        <connect ID="3"/>
      </block>
      <block id="6" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="320.0" posY="-260.0"/>
        <content>function zanurzanie(k);	{ N=abc.length-1;;	while(2*k&lt;=N) {;	j = 2*k;;	if(j&lt;N &amp;&amp; abc[j]&lt;abc[j+1]) j++;;	if(!(abc[k]&lt;abc[j])) break;;	pom=abc[k];;	abc[k]=abc[j];;	abc[j]=pom;;	k=j;}};	</content>
      </block>
      <block id="7" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="10.0" posY="140.0"/>
        <content>function wynurzanie(lista, k)&#13;;	{ m=Math.floor(k/2)&#13;;	while(k&gt;1 &amp;&amp; lista[m]&lt;lista[k]) {&#13;;	pom=lista[k];&#13;;	//Writeln(k +" "+m)&#13;;	lista[k]=lista[m];&#13;;	lista[m]=pom;&#13;;	k=Math.floor(k/2);&#13;;	m=Math.floor(k/2)}}&#13;;	</content>
        <connect ID="8"/>
      </block>
      <block id="8" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="-260.0" posY="140.0"/>
        <content>Writeln(abc);	//wynurzanie(abc,abc.length-1);	zanurzanie(1);	Writeln(abc);	Writeln(czyJestKopcem());	abc=[0,83,120,99,80,72,34,21,18,9];	zanurzanie(1);	Writeln(abc)</content>
        <connect ID="2"/>
      </block>
    </blocks>
  </flowchart>
  <flowchart name="Losowe">
    <canvas interval="200" posX="0.47799492" posY="-81.108185" zoom="4"/>
    <blocks>
      <block id="1" name="Start" type="START">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="0.0" posY="-460.0"/>
        <comment>Losowe</comment>
        <connect ID="6"/>
      </block>
      <block id="2" type="RETURN">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="360.0" posY="450.0"/>
        <comment>End</comment>
      </block>
      <block id="3" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="50.0"/>
        <content>function utworzListe(abc,K,zakres){&#13;;	    abc[0]=0&#13;;	    for (k=1;k&lt;K;k++)&#13;;	    abc[k]=Math.floor((Math.random()*zakres))}</content>
        <connect ID="5"/>
      </block>
      <block id="4" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="360.0" posY="280.0"/>
        <content>lista=[];	utworzListe(lista,20,150);	Writeln (lista);	Writeln(czyJestKopcem(lista));	utworzKopiec(lista);	Writeln (lista);	Writeln(czyJestKopcem(lista));	sortowanie(lista);	Writeln (lista);	Writeln(czyJestKopcem(lista))</content>
        <connect ID="2"/>
      </block>
      <block id="5" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="180.0"/>
        <content>function utworzKopiec(abc) {&#13;;	    //tworzenie kopca&#13;;	srodek=Math.floor(abc.length/2)&#13;;	for (k=srodek; k&gt;=1; k--) &#13;;	zanurzanie(abc, k,abc.length-1)&#13;;	}</content>
        <connect ID="9"/>
      </block>
      <block id="6" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="-330.0"/>
        <content>function zanurzanie(abc,k,N);	{;	while(2*k&lt;=N) {;	j = 2*k;;	if(j&lt;N &amp;&amp; abc[j]&lt;abc[j+1]) j++;;	if(!(abc[k]&lt;abc[j])) break;;	pom=abc[k];;	abc[k]=abc[j];;	abc[j]=pom;;	k=j;}};	</content>
        <connect ID="7"/>
      </block>
      <block id="7" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="-110.0"/>
        <content>function czyJestKopcem(abc) {&#13;;	dlugosc=abc.length;&#13;;	jestKopcem = true;&#13;;	for(k=1; k&lt;abc.length;k++) {&#13;;	if(2*k&gt;=dlugosc) return true;&#13;;	jestKopcem=abc[k]&gt;=abc[2*k];&#13;;	if(2*k+1&gt;=dlugosc) return jestKopcem;&#13;;	jestKopcem=jestKopcem &amp;&amp; abc[k]&gt;=abc[2*k+1];&#13;;	if (!jestKopcem) return false;&#13;;	}}&#13;;	</content>
        <connect ID="3"/>
      </block>
      <block id="8" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="360.0" posY="-90.0"/>
        <content>function wynurzanie(lista, k)&#13;;	{ m=Math.floor(k/2)&#13;;	while(k&gt;1 &amp;&amp; lista[m]&lt;lista[k]) {&#13;;	pom=lista[k];&#13;;	//Writeln(k +" "+m)&#13;;	lista[k]=lista[m];&#13;;	lista[m]=pom;&#13;;	k=Math.floor(k/2);&#13;;	m=Math.floor(k/2)}}&#13;;	</content>
        <connect ID="11"/>
      </block>
      <block id="9" type="JUMP">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="190.0" posY="180.0"/>
        <content> </content>
        <connect ID="10"/>
      </block>
      <block id="10" type="JUMP">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="190.0" posY="-90.0"/>
        <content> </content>
        <connect ID="8"/>
      </block>
      <block id="11" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="360.0" posY="80.0"/>
        <content>function sortowanie(abc) {&#13;;	N = abc.length-1;&#13;;	while (N&gt;1) {&#13;;	pom = abc[1];&#13;;	abc[1] = abc[N];&#13;;	abc[N--] = pom;&#13;;	zanurzanie(abc, 1, N)}}&#13;;	</content>
        <connect ID="4"/>
      </block>
    </blocks>
  </flowchart>
</JavaBlocks>
