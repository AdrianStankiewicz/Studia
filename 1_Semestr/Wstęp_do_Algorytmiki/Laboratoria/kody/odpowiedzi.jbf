<?xml version="1.0" encoding="UTF-8"?><JavaBlocks author="adi02" scriptEngine="JavaScript" version="6010">
  <option fullConnectorValues="true" grid="false" pascal="false"/>
  <flowchart name="Wstawianie">
    <canvas interval="200" posX="-57.027924" posY="-190.81131" zoom="3"/>
    <blocks>
      <block displayName="true" id="1" name="Wstawianie" type="START">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="0.0" posY="-100.0"/>
        <comment>Wstawianie</comment>
        <connect ID="3"/>
      </block>
      <block id="2" type="RETURN">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="0.0" posY="340.0"/>
        <comment>End</comment>
      </block>
      <block id="3" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="-30.0"/>
        <content>lista = [8 ,2, 89 , 34, 35, 64, 24, 764, 23, 65, 2, 345, 345, 23, 65, 23, 6, 42, 2]</content>
        <connect ID="4"/>
      </block>
      <block id="4" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="120.0"/>
        <content>for(i=1;i&lt;lista.length;i++) {&#13;;	    chwilowa=lista[i];&#13;;	    j=i-1;&#13;;	    &#13;;	    while(j&gt;=0 &amp;&amp; lista[j] &gt; chwilowa) {&#13;;	        lista[j+1] = lista[j];&#13;;	        j--;&#13;;	    }&#13;;	    &#13;;	    lista[j+1] = chwilowa;&#13;;	}</content>
        <connect ID="5"/>
      </block>
      <block id="5" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="270.0"/>
        <content>Writeln(lista)</content>
        <connect ID="2"/>
      </block>
    </blocks>
  </flowchart>
  <flowchart name="Scalanie">
    <canvas interval="200" posX="-801.7109" posY="-422.21744" zoom="4"/>
    <blocks>
      <block id="1" name="Start" type="START">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="980.0" posY="270.0"/>
        <comment>Scalanie</comment>
        <connect ID="3"/>
      </block>
      <block id="2" type="RETURN">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="1270.0" posY="580.0"/>
        <comment>End</comment>
      </block>
      <block id="3" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="980.0" posY="360.0"/>
        <content>lista = [8 ,2, 89 , 34, 35, 64, 24, 764, 23, 65, 2, 345, 345, 23, 65, 23, 6, 42, 2]</content>
        <connect ID="8"/>
      </block>
      <block id="4" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="300.0" posY="460.0"/>
        <content>function sklejanie(lista, poczatek, srodek, koniec) {&#13;;	    &#13;;	    n1 = srodek-poczatek+1&#13;;	    n2 = koniec-srodek&#13;;	&#13;;	    lewa[n1], prawa[n2]&#13;;	&#13;;	    for(i=0; i &lt; n1; i++) lewa[i] = lista[poczatek-1]&#13;;	    for(j=0; i &lt; n2; j++) prawa[i] = lista[srodek+poczatek+j]&#13;;	&#13;;	    i=0&#13;;	    j=0&#13;;	    k=l&#13;;	&#13;;	    while(i &lt; n1 &amp;&amp; j &lt; n2) {&#13;;	        if(lewa[i] &lt;= prawa[i]) {&#13;;	            lista[k] = lewa[i]&#13;;	            i++&#13;;	        }&#13;;	        else {&#13;;	            lista[k] = prawa[j]&#13;;	            j++&#13;;	        }&#13;;	        k++&#13;;	    }&#13;;	&#13;;	    while(i &lt; n1) {&#13;;	        lista[k] = lewa[i]&#13;;	        i++&#13;;	        k++&#13;;	    }&#13;;	&#13;;	    while(j &lt; n2) {&#13;;	        lista[k] = prawa[j]&#13;;	        j++&#13;;	        k++&#13;;	    }&#13;;	    Writeln(lista)&#13;;	}</content>
        <connect ID="10"/>
      </block>
      <block id="5" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="1270.0" posY="500.0"/>
        <content>scalSort(lista, 0, 18)</content>
        <connect ID="2"/>
      </block>
      <block id="7" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="890.0" posY="500.0"/>
        <content>function scalSort(lista, poczatek, koniec) {&#13;;	    if(poczatek &lt; koniec) {&#13;;	        srodek = poczatek+(koniec-poczatek)/2&#13;;	        &#13;;	        scalSort(lista, poczatek, srodek)&#13;;	        scalSort(lista, srodek+1, koniec)&#13;;	        &#13;;	        sklejanie(lista, poczatek, srodek ,koniec)&#13;;	    }&#13;;	}</content>
        <connect ID="5"/>
      </block>
      <block id="8" type="JUMP">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="620.0" posY="360.0"/>
        <content> </content>
        <connect ID="9"/>
      </block>
      <block id="9" type="JUMP">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="620.0" posY="460.0"/>
        <content> </content>
        <connect ID="4"/>
      </block>
      <block id="10" type="JUMP">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="300.0" posY="840.0"/>
        <content> </content>
        <connect ID="11"/>
      </block>
      <block id="11" type="JUMP">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="579.0" posY="843.0"/>
        <content> </content>
        <connect ID="12"/>
      </block>
      <block id="12" type="JUMP">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="578.0" posY="498.0"/>
        <content> </content>
        <connect ID="7"/>
      </block>
    </blocks>
  </flowchart>
  <flowchart name="WstawianieCzyste">
    <canvas interval="200" posX="-30.552094" posY="129.98262" zoom="3"/>
    <blocks>
      <block id="0" name="Start" type="START">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="0.0" posY="-300.0"/>
        <comment>WstawianieCzyste</comment>
        <connect ID="2"/>
      </block>
      <block id="1" type="RETURN">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="0.0" posY="100.0"/>
        <comment>End</comment>
      </block>
      <block id="2" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="-100.0"/>
        <content>//****************************************&#13;;	//funkcja przestawiania dla metody sortowania przez wstawianie&#13;;	function przestawianie(lista,i){&#13;;	    j=i&#13;;	    while(j&gt;1 &amp;&amp; lista[j]&lt;lista[j-1]){&#13;;	        pom=lista[j]&#13;;	        lista[j]=lista[j-1]&#13;;	        lista[j-1]=pom&#13;;	        j--}&#13;;	        }&#13;;	//****************************************&#13;;	// kod wykorzystujący funkcję przestawianie&#13;;	lista=[2,56,77,88,9,3,6]&#13;;	for(k=1;k&lt;lista.length;k++) przestawianie(lista,k)&#13;;	Writeln(lista)&#13;;	</content>
        <connect ID="1"/>
      </block>
    </blocks>
  </flowchart>
  <flowchart name="ScalanieCzyste">
    <canvas interval="200" posX="-144.58334" posY="-153.58333" zoom="2"/>
    <blocks>
      <block id="0" name="Start" type="START">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="0.0" posY="-100.0"/>
        <comment>ScalanieCzyste</comment>
        <connect ID="2"/>
      </block>
      <block id="1" type="RETURN">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="0.0" posY="190.0"/>
        <comment>End</comment>
      </block>
      <block id="2" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="40.0"/>
        <content>//**********************************************&#13;;	//funkcja scalania fragmentów listy&#13;;	function scal(odPoz, srodek, doPoz)&#13;;	{i=odPoz; j=srodek+1&#13;;	for (k=odPoz; k&lt;=doPoz; k++){&#13;;	if (i&gt;srodek) lista[k]=pomocnicza[j++]&#13;;	else if (j&gt;doPoz) lista[k]=pomocnicza[i++] &#13;;	else if (pomocnicza[j]&lt;pomocnicza[i]) &#13;;	lista[k]=pomocnicza[j++]&#13;;	else lista[k]=pomocnicza[i++]}</content>
        <connect ID="1"/>
      </block>
    </blocks>
  </flowchart>
</JavaBlocks>
